
//MEDIA
@mixin mu($media) {
	@if $media == xs {
	  @media (min-width: $screen-xs) { @content; }
	}
	@else if $media == sm {
	  @media (min-width: $screen-sm) { @content; }
	}
	@else if $media == md {
	  @media (min-width: $screen-md) { @content; }
	}
	@else if $media == lg {
	  @media (min-width: $screen-lg) { @content; }
	}
  }
  
  @mixin md($media) {
	@if $media == sm {
	  @media (max-width: $screen-sm - 1) { @content; }
	}
	@else if $media == md {
	  @media (max-width: $screen-md - 1) { @content; }
	}
	@else if $media == lg {
	  @media (max-width: $screen-lg - 1) { @content; }
	}
	@else if $media == xl {
	  @media (max-width: $screen-xl - 1) { @content; }
	}
	@else if $media == xxl {
		@media (max-width: $screen-xxl - 1) { @content; }
	  }
  }

  @mixin mdc($media) {
	@media (max-width: $media - 1) { @content; }
  }
  
  @mixin media-retina {
	  @media
	  only screen and (-webkit-min-device-pixel-ratio: 2),
	  only screen and (min-resolution: 192dpi),
	  only screen and (min-resolution: 2dppx) {
		  @content;
	  }
  }

  @mixin font-face($font-family, $file-path, $weight: normal, $style: normal, $asset-pipeline: false) {
	@font-face {
		font-family: $font-family;
		font-weight: $weight;
		font-style: $style;

		@if $asset-pipeline==true {
			src: font-url('#{$file-path}.eot');
			src: font-url('#{$file-path}.eot?#iefix') format('embedded-opentype'),
			font-url('#{$file-path}.woff') format('woff'),
			font-url('#{$file-path}.ttf') format('truetype');
		}

		@else {
			src: url('#{$file-path}.eot');
			src: url('#{$file-path}.eot?#iefix') format('embedded-opentype'),
			url('#{$file-path}.woff') format('woff'),
			url('#{$file-path}.ttf') format('truetype');
		}
	}
}

@mixin pseudo($display: block, $pos: absolute, $content: '') {
	content: $content;
	display: $display;
	position: $pos;
}

@mixin css-triangle($color, $direction, $size: 6px, $position: absolute, $round: false) {
	@include pseudo($pos: $position);
	width: 0;
	height: 0;

	@if $round {
		border-radius: 3px;
	}

	@if $direction==down {
		border-left: $size solid transparent;
		border-right: $size solid transparent;
		border-top: $size solid $color;
		margin-top: 0 - round($size / 2.5);
	}

	@else if $direction==up {
		border-left: $size solid transparent;
		border-right: $size solid transparent;
		border-bottom: $size solid $color;
		margin-bottom: 0 - round($size / 2.5);
	}

	@else if $direction==right {
		border-top: $size solid transparent;
		border-bottom: $size solid transparent;
		border-left: $size solid $color;
		margin-right: -$size;
	}

	@else if $direction==left {
		border-top: $size solid transparent;
		border-bottom: $size solid transparent;
		border-right: $size solid $color;
		margin-left: -$size;
	}
}

@mixin absolute-center {
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    margin: auto;
}

  
@mixin border-radius($radius) {
	-webkit-border-radius: $radius;
	   -moz-border-radius: $radius;
		-ms-border-radius: $radius;
			border-radius: $radius;
  }


  //OPACITY
  
  @mixin opacity($op-start: .5, $op-end: 1) {
	opacity: $op-start;
	transition: opacity ease .4s;
	&:hover {
	  opacity: $op-end;
	}
  }